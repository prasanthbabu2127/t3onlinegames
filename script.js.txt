const board = document.getElementById("board");
const message = document.getElementById("message");
const resetButton = document.getElementById("resetButton");

let currentPlayer = "X";
let gameState = ["", "", "", "", "", "", "", "", ""];
let isGameActive = true;

// Winning combinations
const winningCombinations = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8],
  [0, 3, 6],
  [1, 4, 7],
  [2, 5, 8],
  [0, 4, 8],
  [2, 4, 6],
];

// Update background color based on the player's turn
function updateBackgroundColor() {
  document.body.style.backgroundColor = currentPlayer === "X" ? "red" : "yellow";
  message.style.color = currentPlayer === "X" ? "white" : "black"; // Adjust text color for contrast
}

// Handle cell click
function handleCellClick(event) {
  const cell = event.target;
  const index = cell.getAttribute("data-index");

  if (gameState[index] !== "" || !isGameActive) return;

  gameState[index] = currentPlayer;
  cell.textContent = currentPlayer;
  cell.classList.add("taken");

  if (checkWin()) {
    message.textContent = `Player ${currentPlayer} Wins!`;
    isGameActive = false;
  } else if (gameState.every((cell) => cell !== "")) {
    message.textContent = "It's a Draw!";
    isGameActive = false;
  } else {
    currentPlayer = currentPlayer === "X" ? "O" : "X";
    message.textContent = `Player ${currentPlayer}'s Turn`;
    updateBackgroundColor(); // Update background on player switch
  }
}

// Check for a win
function checkWin() {
  return winningCombinations.some((combination) => {
    return combination.every((index) => gameState[index] === currentPlayer);
  });
}

// Reset the game
function resetGame() {
  gameState = ["", "", "", "", "", "", "", "", ""];
  currentPlayer = "X";
  isGameActive = true;
  message.textContent = "Player X's Turn";
  document.querySelectorAll(".cell").forEach((cell) => {
    cell.textContent = "";
    cell.classList.remove("taken");
  });
  updateBackgroundColor(); // Reset background color
}

// Add event listeners
board.addEventListener("click", handleCellClick);
resetButton.addEventListener("click", resetGame);

// Set initial background color
updateBackgroundColor();
